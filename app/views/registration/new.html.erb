<%# rails has action view helpers tha help us build elements %>


<%# form_with looks for an url based upon our model like it must do post-user, therefore we must have a post-request %>
<%= form_with model: @user, url: sign_up_path, data: { turbo: false }  do |form| %>

    <%# forms are smart enough to update any errors if present %>
    <%# the @user is instanciated in  new(), after post request we can also find out the erros from the instanciated variable if any %>
    <%# You're getting the NilClass error because @post has no value (it's nil) when you first load the form on the new action.When you do the render :new in your create action there is no problem because it's using the @post you've defined at the top of create. %>

    <% if @user.errors.any? %>
        <div class="alert alert-danger d-flex justify-content-center" role="alert">
            <% @user.errors.full_messages.each do |msg|%>
                <%=msg%>
            <% end %>
        </div>
    <%end%>
    
    <%# we can create helper elements, like label & input-field also be specific with what type that input-field must be. %>
    <div class="my-3 py-2">
        <%= form.label :email %>
        <%= form.text_field :email, class:"form-control", placeholder:"j.doe@plansource.com"%>
    </div>
    <div class="my-3 py-2">
        <%= form.label :password %>
        <%= form.password_field :password, class:"form-control", placeholder:"********"%>
    </div>
    <div class="my-3 py-2">
        <%= form.label :password_confirmation  %>
        <%= form.password_field :password_confirmation, class:"form-control", placeholder:"********"%>
    </div>

    <div class="my-3">
        <%= form.submit "Sign Up", class:"btn btn-lg btn-block btn-primary"%>
    </div>
    
<% end %>